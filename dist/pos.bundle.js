/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./JS/pos.js":
/*!*******************!*\
  !*** ./JS/pos.js ***!
  \*******************/
/***/ (() => {

eval("// JavaScript to toggle withdrawal methods\n\ndocument.addEventListener('DOMContentLoaded', function () {\n  const withdrawalTypeDiv = document.querySelector('.withdrawalTransactionType');\n  const transactionType = document.getElementById('transactionType');\n  const withdrawalType = document.getElementById('withdrawalType');\n  const posFeePaymentType = document.getElementById('posFeePaymentType');\n  if (transactionType) {\n    transactionType.addEventListener('change', function (e) {\n      const selectedType = e.target.value;\n      if (selectedType === 'Withdraw' || selectedType === 'WithdrawAndTransfer' || selectedType === 'BillPayment') {\n        withdrawalTypeDiv.style.display = 'block';\n      } else if (selectedType === 'Deposit') {\n        withdrawalType.value = 'Cash';\n        posFeePaymentType.value = 'Cash';\n        withdrawalTypeDiv.style.display = 'none';\n        posFeePaymentType.style.display = 'block';\n      }\n\n      //  if (selectedType === 'Deposit') {\n      //   withdrawalType.value = 'Cash';\n\n      //   const selectedOption =\n      //     withdrawalType.querySelector(`option[value='Cash']`);\n      //   if (selectedOption) {\n      //     selectedOption.selected = true;\n      //   }\n\n      //   console.log('Withdrawal Type set to Cash');\n      // }\n    });\n  }\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  const posSuccessfulCheckbox = document.getElementById('posSuccessfulCheckbox');\n  const posPendingCheckbox = document.getElementById('posPendingCheckbox');\n  const posRemarksDiv = document.querySelector('.posRemarksDiv');\n  const posTransactionRemark = document.getElementById('posTransactionRemark');\n  const checkboxes = document.querySelectorAll('input[type=\"checkbox\"]');\n  function updateStatus() {\n    if (posSuccessfulCheckbox.checked) {\n      posRemarksDiv.style.display = 'none';\n      posTransactionRemark.value = 'Successful';\n      posTransactionRemark.disabled = true;\n    } else {\n      posRemarksDiv.style.display = 'block';\n      posTransactionRemark.disabled = false;\n    }\n  }\n  updateStatus();\n  checkboxes.forEach(checkbox => {\n    checkbox.addEventListener('change', function () {\n      checkboxes.forEach(otherCheckbox => {\n        if (otherCheckbox !== checkbox) {\n          otherCheckbox.checked = false;\n          otherCheckbox.removeAttribute('required');\n        }\n      });\n      if (checkbox === posSuccessfulCheckbox) {\n        posPendingCheckbox.checked = !checkbox.checked;\n      } else {\n        posSuccessfulCheckbox.checked = !checkbox.checked;\n        posTransactionRemark.value = '';\n      }\n\n      //Backup\n      // if (checkbox === posSuccessfulCheckbox) {\n      //   posSuccessfulCheckbox.checked = true;\n      //   posRemarksDiv.style.display = 'none';\n      //   posTransactionRemark.disabled = true;\n      //   posTransactionRemark.value = 'Successful';\n      // } else {\n      //   posPendingCheckbox.checked = true;\n      //   posRemarksDiv.style.display = 'flex';\n      //   posTransactionRemark.disabled = false;\n      //   posTransactionRemark.value = '';\n      // }\n      updateStatus();\n    });\n  });\n  posTransactionRemark.addEventListener('input', function () {\n    const inputValue = posTransactionRemark.value.trim();\n    posPendingCheckbox.checked = inputValue !== '';\n    posSuccessfulCheckbox.checked = !posPendingCheckbox.checked;\n    posSuccessfulCheckbox.removeAttribute('required');\n\n    //Backup\n    //  if (inputValue !== '') {\n    //    posPendingCheckbox.checked = true;\n    //    posSuccessfulCheckbox.checked = false;\n    //    posSuccessfulCheckbox.removeAttribute('required');\n    //  } else {\n    //    posPendingCheckbox.checked = false;\n    //    return;\n    //  }\n\n    updateStatus();\n  });\n});\n\n// JavaScript for POS Form\nconst amount = document.getElementById('posTransactionAmount');\nconst fee = document.getElementById('posTransactionFee');\nconst posFeePaymentType = document.getElementById('posFeePaymentType');\nconst posForm = document.querySelector('.pos-method-form');\nif (posForm) {\n  posForm.addEventListener('submit', function (e) {\n    e.preventDefault();\n    const transactionType = document.getElementById('transactionType');\n    const withdrawalType = document.getElementById('withdrawalType');\n    const posSuccessfulCheckbox = document.getElementById('posSuccessfulCheckbox');\n    const posPendingCheckbox = document.getElementById('posPendingCheckbox');\n    const posRemarksDiv = document.querySelector('.posRemarksDiv');\n    const withdrawalTypeDiv = document.querySelector('.withdrawalTransactionType');\n    const posTransactionRemark = document.getElementById('posTransactionRemark');\n    handlePosFormSubmit(transactionType, withdrawalType, amount, fee, posFeePaymentType, posTransactionRemark);\n    transactionType.value = 'Withdraw';\n    withdrawalType.value = 'Card';\n    posFeePaymentType.value = 'Card';\n    amount.value = '';\n    fee.value = '';\n    posTransactionRemark.value = '';\n    posSuccessfulCheckbox.checked = false;\n    posPendingCheckbox.checked = false;\n    withdrawalTypeDiv.style.display = 'block';\n    posRemarksDiv.style.display = 'block';\n  });\n}\nfunction handlePosFormSubmit(transactionType, withdrawalType, amount, fee, posFeePaymentType, posTransactionRemark) {\n  let selectedTransactionType = transactionType.value;\n  let selectedWithdrawalType = withdrawalType.value;\n  let posTransactionAmount = Number(amount.value);\n  let posTransactionFee = Number(fee.value);\n  let selectedPosFeePaymentType = posFeePaymentType.value;\n  let posTransactionRemarkInput = posTransactionRemark.value;\n  let id = Math.random();\n  if (selectedTransactionType === 'Deposit') {\n    selectedWithdrawalType = 'Cash';\n  }\n  const posFormData = {\n    selectedTransactionType,\n    selectedWithdrawalType,\n    posTransactionAmount,\n    posTransactionFee,\n    id,\n    selectedPosFeePaymentType,\n    posTransactionRemarkInput\n  };\n  console.log(posFormData);\n  const storedData = JSON.parse(localStorage.getItem('posFormData')) || [];\n  const allData = [posFormData, ...storedData];\n  localStorage.setItem('posFormData', JSON.stringify(allData));\n  return posFormData;\n}\n\n//# sourceURL=webpack://arot/./JS/pos.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./JS/pos.js"]();
/******/ 	
/******/ })()
;