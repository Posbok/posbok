/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./JS/apiServices/product.js":
/*!***********************************!*\
  !*** ./JS/apiServices/product.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addProduct: () => (/* binding */ addProduct),\n/* harmony export */   deleteProduct: () => (/* binding */ deleteProduct),\n/* harmony export */   getProducts: () => (/* binding */ getProducts),\n/* harmony export */   updateProduct: () => (/* binding */ updateProduct)\n/* harmony export */ });\n/* harmony import */ var _config_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../config.js */ \"./config.js\");\n\nconst baseUrl = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].baseUrl;\nconst apiToken = _config_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].token;\n\n// export async function getProducts() {\n//   try {\n//     //  console.log('Sending GET request...');\n//     const response = await fetch(`${baseUrl}/api/products`, {\n//       method: 'GET',\n//       headers: {\n//         Authorization: `Bearer ${apiToken}`,\n//         'Content-Type': 'application/json',\n//       },\n//     });\n\n//     //  console.log('Response received...');\n\n//     if (!response.ok) {\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n\n//     const data = await response.json();\n//     //  console.log('Products:', data);\n//     return data;\n//   } catch (error) {\n//     //  console.error('Error fetching products:', error);\n//     return [];\n//   }\n// }\n\nasync function getProducts(page = 1, pageSize = 25) {\n  try {\n    const response = await fetch(`${baseUrl}/api/products?pagination[page]=${page}&pagination[pageSize]=${pageSize}&pagination[withCount]=true`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${apiToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    return data; // Returns both product data and pagination meta\n  } catch (error) {\n    console.error('Error fetching products:', error);\n    return {\n      data: [],\n      meta: {\n        pagination: {\n          pageCount: 1\n        }\n      }\n    };\n  }\n}\nasync function addProduct(productData) {\n  try {\n    console.log('Sending POST request...');\n    const response = await fetch(`${baseUrl}/api/products`, {\n      method: 'POST',\n      headers: {\n        Authorization: `Bearer ${apiToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData)\n    });\n    console.log('Response received...');\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    console.log('Product added successfully:', data);\n    return data;\n  } catch (error) {\n    console.error('Error posting product:', error);\n  }\n}\n\n// export async function addProduct(productData) {\n//   try {\n//     console.log('Sending POST request...');\n//     const response = await fetch(`${baseUrl}/api/products`, {\n//       method: 'POST',\n//       headers: {\n//         Authorization: `Bearer ${apiToken}`,\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify(productData),\n//     });\n\n//     console.log('Response received...');\n\n//     if (!response.ok) {\n//       // Check if the response status is OK (2xx range)\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n\n//     const data = await response.json();\n//     console.log('Product added successfully:', data);\n\n//     // Return success status and the data\n//     return { success: true, data };\n//   } catch (error) {\n//     console.error('Error posting product:', error);\n//     // Return failure status if there's an error\n//     return { success: false, error };\n//   }\n// }\n\nasync function updateProduct(documentId, productData) {\n  try {\n    //  console.log('Sending PUT request...');\n    const response = await fetch(`${baseUrl}/api/products/${documentId}`, {\n      method: 'PUT',\n      headers: {\n        Authorization: `Bearer ${apiToken}`,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(productData)\n    });\n    //  console.log('Response received...');\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    const data = await response.json();\n    //  console.log('Product updated successfully:', data);\n    return data;\n  } catch (error) {\n    console.error('Error updating product:', error);\n  }\n}\nasync function deleteProduct(documentId) {\n  try {\n    console.log('Sending DELETE request...');\n    const response = await fetch(`${baseUrl}/api/products/${documentId}`, {\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${apiToken}`,\n        'Content-Type': 'application/json'\n      }\n    });\n    console.log('Response received...');\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    console.log('Product deleted successfully');\n    return true; // Return true if deletion was successful\n  } catch (error) {\n    console.error('Error deleting product:', error);\n    return false; // Return false if there was an error\n  }\n}\n\n//# sourceURL=webpack://posbok/./JS/apiServices/product.js?");

/***/ }),

/***/ "./JS/helper/helper.js":
/*!*****************************!*\
  !*** ./JS/helper/helper.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearFormInputs: () => (/* binding */ clearFormInputs),\n/* harmony export */   formatAmountWithCommas: () => (/* binding */ formatAmountWithCommas),\n/* harmony export */   formatAmountWithCommasOnInput: () => (/* binding */ formatAmountWithCommasOnInput),\n/* harmony export */   getAmountForSubmission: () => (/* binding */ getAmountForSubmission),\n/* harmony export */   isUserLoggedIn: () => (/* binding */ isUserLoggedIn)\n/* harmony export */ });\n// isUserLoggedIn() - Used to make sure that a user is loggedin before running functions that needs to run automatically so that they don rn on Authenyication pages\n\nfunction isUserLoggedIn() {\n  const token = localStorage.getItem('accessToken');\n  const user = localStorage.getItem('userData');\n  return Boolean(token && user);\n}\n\n// export function isUserLoggedIn() {\n//    return !!localStorage.getItem('accessToken') && !!localStorage.getItem('userData');\n//  }\n\nfunction clearFormInputs() {\n  // Select the form element and reset its inputs\n  const createShopForm = document.querySelector('.createShopModal');\n  const createStaffForm = document.querySelector('.createStaffModal');\n  const updateStaffForm = document.querySelector('.adminUpdateUserDataModal');\n  const updateShopForm = document.querySelector('.adminUpdateShopDataModal');\n  const staffManageForm = document.querySelector('.staffManageModal');\n  const depositPosCapitalForm = document.querySelector('.depositPosCapitalModal');\n  const createPosTransactionForm = document.querySelector('.pos-method-form');\n\n  //   console.log('activated');\n\n  //   if (createStaffForm || updateStaffForm) {\n  //     if (createStaffForm) createStaffForm.reset();\n  //     if (updateStaffForm) updateStaffForm.reset();\n  //   }\n\n  // Clear Create Staff Form Inputs\n  if (createStaffForm) {\n    createStaffForm.querySelectorAll('input, textarea, select').forEach(el => {\n      if (el.type === 'checkbox' || el.type === 'radio') {\n        el.checked = false;\n      } else {\n        el.value = '';\n      }\n    });\n  }\n\n  // Clear Create Shop Form Inputs\n  if (createShopForm) {\n    createShopForm.querySelectorAll('input, textarea, select').forEach(el => {\n      if (el.type === 'checkbox' || el.type === 'radio') {\n        el.checked = false;\n      } else {\n        el.value = '';\n      }\n    });\n    delete createShopForm.dataset.bound;\n  }\n\n  // Clear Update Staff Form Inputs\n  if (updateStaffForm) {\n    updateStaffForm.querySelectorAll('input, textarea, select').forEach(el => {\n      if (el.type === 'checkbox' || el.type === 'radio') {\n        el.checked = false;\n      } else {\n        el.value = '';\n      }\n    });\n    delete updateStaffForm.dataset.bound;\n  }\n\n  // Clear Update SHop Form Inputs\n  if (updateShopForm) {\n    updateShopForm.querySelectorAll('input, textarea, select').forEach(el => {\n      if (el.type === 'checkbox' || el.type === 'radio') {\n        el.checked = false;\n      } else {\n        el.value = '';\n      }\n    });\n    delete updateShopForm.dataset.bound;\n  }\n\n  // Clear Create Shop Form Inputs\n  if (depositPosCapitalForm) {\n    depositPosCapitalForm.querySelectorAll('input, textarea, select').forEach(el => {\n      if (el.type === 'checkbox' || el.type === 'radio') {\n        el.checked = false;\n      } else {\n        el.value = '';\n      }\n    });\n    delete depositPosCapitalForm.dataset.bound;\n  }\n\n  // Clear Create Shop Form Inputs\n  if (staffManageForm) {\n    staffManageForm.querySelectorAll('input, textarea, select').forEach(el => {\n      if (el.type === 'checkbox' || el.type === 'radio') {\n        el.checked = false;\n      } else {\n        el.value = '';\n      }\n    });\n    delete staffManageForm.dataset.staffId;\n\n    // Optional: reset text labels like staff name or current shop\n    const nameLabel = staffManageForm.querySelector('#staffManage-name');\n    if (nameLabel) nameLabel.innerText = '';\n    const currentShopDisplay = staffManageForm.querySelector('#currentAssignedShop');\n    if (currentShopDisplay) currentShopDisplay.innerText = 'No Shop Assigned';\n    delete staffManageForm.dataset.bound;\n  }\n\n  // Clear POS Transaction Form Inputs\n  if (createPosTransactionForm) {\n    createPosTransactionForm.querySelectorAll('input, textarea, select').forEach(el => {\n      if (el.type === 'checkbox' || el.type === 'radio') {\n        el.checked = false;\n      } else {\n        el.value = '';\n      }\n    });\n    delete createPosTransactionForm.dataset.staffId;\n  }\n}\n\n// function to format amounts with commas\nfunction formatAmountWithCommas(amount) {\n  if (amount === null || amount === undefined) {\n    return amount; // return an empty string if amount is null or undefined\n  }\n  const amountString = amount.toString();\n  return amountString.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n}\n\n// Function to handle input formatting and remove commas when submitting\nfunction formatAmountWithCommasOnInput(input) {\n  //   console.log('formatAmountWithCommasOnInput() Reached');\n\n  let value = input.value;\n  value = value.replace(/[^0-9]/g, ''); // Remove non-numeric characters\n  input.value = formatAmountWithCommas(value);\n}\ndocument.addEventListener('DOMContentLoaded', function () {\n  const posCapitalAmountInput = document.getElementById('posCapitalAmount');\n  const posTransactionAmountInput = document.getElementById('posTransactionAmount');\n  if (posCapitalAmountInput) posCapitalAmountInput.addEventListener('input', function () {\n    formatAmountWithCommasOnInput(posCapitalAmountInput);\n  });\n  if (posTransactionAmountInput) posTransactionAmountInput.addEventListener('input', function () {\n    formatAmountWithCommasOnInput(posTransactionAmountInput);\n  });\n});\n\n// Make the function globally available\nwindow.formatAmountWithCommasOnInput = formatAmountWithCommasOnInput;\n\n// When submitting, remove commas from the value before processing\n// export function getAmountForSubmission(input) {\n//   console.log('This is the input received from call', input);\n//   return input.value.replace(/,/g, ''); // Remove commas for backend submission\n// }\n\nfunction getAmountForSubmission(inputOrString) {\n  const rawValue = typeof inputOrString === 'string' ? inputOrString : inputOrString?.value || '';\n  return rawValue.replace(/,/g, '');\n}\n\n//# sourceURL=webpack://posbok/./JS/helper/helper.js?");

/***/ }),

/***/ "./JS/sell.js":
/*!********************!*\
  !*** ./JS/sell.js ***!
  \********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _apiServices_product__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./apiServices/product */ \"./JS/apiServices/product.js\");\n/* harmony import */ var _helper_helper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./helper/helper */ \"./JS/helper/helper.js\");\n\n\nconst phoneAccessories = [{\n  name: 'Phone Case',\n  price: '₦1000'\n}, {\n  name: 'Screen Protector',\n  price: '₦1500'\n}, {\n  name: 'Charging Cable',\n  price: '₦800'\n}, {\n  name: 'Power Bank',\n  price: '₦2000'\n}, {\n  name: 'Bluetooth Earphones',\n  price: '₦3000'\n}, {\n  name: 'Wireless Charger',\n  price: '₦1500'\n}, {\n  name: 'Car Phone Holder',\n  price: '₦1200'\n}, {\n  name: 'Selfie Stick',\n  price: '₦700'\n}, {\n  name: 'Headphones',\n  price: '₦2500'\n}, {\n  name: 'Phone Stand',\n  price: '₦600'\n}, {\n  name: 'USB Adapter',\n  price: '₦900'\n}, {\n  name: 'Phone Grip',\n  price: '₦300'\n}, {\n  name: 'Earbuds',\n  price: '₦1800'\n}, {\n  name: 'Mobile Lens Kit',\n  price: '₦2200'\n}, {\n  name: 'Smartwatch Band',\n  price: '₦1500'\n}, {\n  name: 'AirPods',\n  price: '₦1500'\n}, {\n  name: 'Bluetooth Earphones',\n  price: '₦800'\n}, {\n  name: 'Charging Cable',\n  price: '₦300'\n}, {\n  name: 'Durable Phone Case',\n  price: '₦1000'\n}, {\n  name: 'Earbuds',\n  price: '₦1800'\n}, {\n  name: 'Fingerprint Lock',\n  price: '₦2500'\n}, {\n  name: 'Gaming Controller',\n  price: '₦3500'\n}, {\n  name: 'Headphones',\n  price: '₦2500'\n}, {\n  name: 'iPhone Case',\n  price: '₦1000'\n}, {\n  name: 'JBL Speakers',\n  price: '₦5000'\n}, {\n  name: 'Keyboard Cover',\n  price: '₦800'\n}, {\n  name: 'LED Phone Case',\n  price: '₦2000'\n}, {\n  name: 'Mobile Lens Kit',\n  price: '₦2200'\n}, {\n  name: 'Noise Cancelling Earphones',\n  price: '₦3500'\n}, {\n  name: 'OnePlus Charger',\n  price: '₦1200'\n}, {\n  name: 'PopSocket',\n  price: '₦500'\n}, {\n  name: 'Quick Charge Adapter',\n  price: '₦1500'\n}, {\n  name: 'Ring Holder Stand',\n  price: '₦600'\n}, {\n  name: 'Selfie Stick',\n  price: '₦700'\n}, {\n  name: 'Smartwatch Band',\n  price: '₦1500'\n}, {\n  name: 'Screen Protector',\n  price: '₦1500'\n}, {\n  name: 'USB Adapter',\n  price: '₦900'\n}, {\n  name: 'Wireless Charger',\n  price: '₦1500'\n}, {\n  name: 'Xiaomi Power Bank',\n  price: '₦2500'\n}, {\n  name: 'Zoom Lens',\n  price: '₦3000'\n}, {\n  name: 'Zipper Earphones',\n  price: '₦1200'\n}, {\n  name: 'Zigzag Phone Stand',\n  price: '₦800'\n}, {\n  name: '360 Degree Phone Holder',\n  price: '₦1200'\n}, {\n  name: 'Anti-Blue Light Glasses',\n  price: '₦800'\n}, {\n  name: 'Foldable Bluetooth Keyboard',\n  price: '₦2500'\n}, {\n  name: 'Game Controller Grip',\n  price: '₦600'\n}, {\n  name: 'Holographic Phone Case',\n  price: '₦1800'\n}, {\n  name: 'In-Ear Gaming Earphones',\n  price: '₦2200'\n}, {\n  name: 'Jogging Arm Band',\n  price: '₦500'\n}, {\n  name: 'Kevlar Charging Cable',\n  price: '₦1200'\n}, {\n  name: 'Laptop Stand for Phones',\n  price: '₦1500'\n}, {\n  name: 'Magnetic Car Mount',\n  price: '₦700'\n}, {\n  name: 'NFC Tags for Phones',\n  price: '₦400'\n}, {\n  name: 'Outdoor Waterproof Speaker',\n  price: '₦3000'\n}, {\n  name: 'Portable UV Phone Sanitizer',\n  price: '₦3500'\n}, {\n  name: 'Quad Lock Bike Mount',\n  price: '₦2000'\n}, {\n  name: 'Retractable Charging Cable',\n  price: '₦1000'\n}, {\n  name: 'Solar Power Bank',\n  price: '₦4500'\n}, {\n  name: 'Telescopic Camera Lens',\n  price: '₦2800'\n}, {\n  name: 'Universal Phone Holder Clip',\n  price: '₦600'\n}, {\n  name: 'Virtual Reality Headset',\n  price: '₦3500'\n}, {\n  name: 'Waterproof Phone Pouch',\n  price: '₦800'\n}];\nlet currentPage = 1;\nconst pageSize = 25;\nlet allProducts = [];\nconst productInput = document.getElementById('productInput');\nconst autocompleteList = document.getElementById('autocompleteList');\nconst priceInput = document.getElementById('itemSellingPrice');\nproductInput.addEventListener('input', () => {\n  if (productInput.value.length > 0) {\n    clearIcon.classList.add('show');\n  } else {\n    clearIcon.classList.remove('show');\n  }\n});\n\n// Clear the input field when the \"X\" icon is clicked\nclearIcon.addEventListener('click', () => {\n  productInput.value = '';\n  clearIcon.classList.remove('show');\n  productInput.focus();\n});\n\n// Initial display of all products\ndisplayAllProducts();\nasync function fetchAllProducts() {\n  let products = [];\n  let page = 1;\n  let morePages = true;\n  while (morePages) {\n    try {\n      const productData = await (0,_apiServices_product__WEBPACK_IMPORTED_MODULE_0__.getProducts)(page, pageSize); // Fetch products for current page\n\n      console.log(`Fetching page ${page} of ${productData.meta.pagination.pageCount}`);\n      if (productData && productData.data) {\n        products = products.concat(productData.data); // Add current page data to all products array\n      }\n\n      // Check if there are more pages\n      morePages = page < productData.meta.pagination.pageCount;\n      page++; // Increment page for the next request\n      console.log(products);\n    } catch (error) {\n      console.error('Error fetching products:', error);\n      morePages = false; // Exit loop if there's an error\n    }\n  }\n  console.log(products);\n  return products;\n}\nasync function displayAllProducts() {\n  try {\n    allProducts = await fetchAllProducts(); // Fetch and store all products\n\n    console.log(`Total products fetched: ${allProducts.length}`);\n    updateAutocompleteList(allProducts); // Populate the autocomplete dropdown with all products\n\n    // Autocomplete filter on input\n    productInput.addEventListener('input', function () {\n      const inputValue = productInput.value.toLowerCase();\n      const filteredProducts = allProducts.filter(product => product.name.toLowerCase().includes(inputValue));\n      updateAutocompleteList(filteredProducts);\n    });\n    productInput.addEventListener('click', function () {\n      autocompleteList.style.display = 'block';\n    });\n  } catch (error) {\n    console.error('Error displaying products:', error);\n  }\n}\n\n// Update the autocomplete list with provided products\nfunction updateAutocompleteList(products) {\n  autocompleteList.innerHTML = '';\n  if (products.length === 0) {\n    const listItem = document.createElement('li');\n    listItem.textContent = 'Item Not Found';\n    listItem.classList.add('autocomplete-list-item');\n    autocompleteList.appendChild(listItem);\n  } else {\n    products.forEach(product => {\n      const listItem = document.createElement('li');\n      listItem.textContent = product.name;\n      listItem.classList.add('autocomplete-list-item');\n      listItem.addEventListener('click', function () {\n        productInput.value = product.name;\n        priceInput.value = (0,_helper_helper__WEBPACK_IMPORTED_MODULE_1__.formatAmountWithCommas)(product.amount_to_sell);\n        autocompleteList.style.display = 'none';\n      });\n      autocompleteList.appendChild(listItem);\n    });\n  }\n}\n\n// async function displayAllProducts() {\n//   try {\n//     const productData = await getProducts(currentPage, pageSize);\n\n//     const products = productData.data;\n\n//     autocompleteList.innerHTML = '';\n//     products.forEach((product) => {\n//       const listItem = document.createElement('li');\n//       listItem.textContent = product.name;\n//       listItem.classList.add('autocomplete-list-item');\n\n//       listItem.addEventListener('click', function () {\n//         productInput.value = product.name;\n//         priceInput.value = formatAmountWithCommas(product.amount_to_sell);\n//         autocompleteList.style.display = 'none';\n//       });\n\n//       autocompleteList.appendChild(listItem);\n//     });\n\n//     // Autocompelte filter\n//     productInput.addEventListener('click', function () {\n//       autocompleteList.style.display = 'block';\n//     });\n\n//     productInput.addEventListener('input', function () {\n//       const inputValue = productInput.value.toLowerCase();\n//       const filteredProducts = products.filter((product) =>\n//         product.name.toLowerCase().includes(inputValue)\n//       );\n//       autocompleteList.innerHTML = '';\n\n//       // Display filtered suggestions\n//       if (filteredProducts.length === 0) {\n//         const listItem = document.createElement('li');\n//         listItem.textContent = 'Item Not Found';\n//         listItem.classList.add('autocomplete-list-item');\n\n//         autocompleteList.appendChild(listItem);\n//       } else {\n//         filteredProducts.forEach((product) => {\n//           const listItem = document.createElement('li');\n//           listItem.textContent = product.name;\n//           listItem.classList.add('autocomplete-list-item');\n\n//           listItem.addEventListener('click', function () {\n//             productInput.value = product.name;\n//             priceInput.value = formatAmountWithCommas(product.amount_to_sell);\n//             autocompleteList.innerHTML = '';\n//           });\n//           autocompleteList.appendChild(listItem);\n//         });\n//       }\n//     });\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// Close the suggestions list when clicking outside\ndocument.addEventListener('click', function (event) {\n  if (!event.target.matches('#productInput')) {\n    autocompleteList.style.display = 'none';\n  }\n});\n\n// JS for the checkboxes and selling of an item\nlet checkboxStatus;\nconst balancePaymentInput = document.getElementById('productBalancePrice');\ndocument.addEventListener('DOMContentLoaded', function () {\n  const completedCheckbox = document.getElementById('completedCheckbox');\n  const balanceCheckbox = document.getElementById('balanceCheckbox');\n  const balancePayment = document.querySelector('.balancePayment');\n  const balancePaymentInput = document.getElementById('productBalancePrice');\n  const checkboxes = document.querySelectorAll('input[type=\"radio\"]');\n  function updateStatus() {\n    if (completedCheckbox.checked) {\n      checkboxStatus = 'Completed';\n      balancePayment.style.display = 'none';\n      balancePaymentInput.value = '';\n      balancePaymentInput.disabled = true;\n    } else {\n      checkboxStatus = 'Balance';\n      balancePayment.style.display = 'block';\n      balancePaymentInput.disabled = false;\n    }\n  }\n  updateStatus();\n  checkboxes.forEach(checkbox => {\n    checkbox.addEventListener('change', function () {\n      checkboxes.forEach(otherCheckbox => {\n        if (otherCheckbox !== checkbox) {\n          otherCheckbox.checked = false;\n          otherCheckbox.removeAttribute('required');\n        }\n      });\n      if (checkbox === completedCheckbox) {\n        completedCheckbox.checked = true;\n        balancePayment.style.display = 'none';\n        balancePaymentInput.disabled = true;\n        balancePaymentInput.value = '';\n        checkboxStatus = 'Completed';\n      } else {\n        balanceCheckbox.checked = true;\n        balancePayment.style.display = 'block';\n        balancePaymentInput.disabled = false;\n        checkboxStatus = 'Balance';\n      }\n      updateStatus();\n    });\n  });\n  balancePaymentInput.addEventListener('input', function () {\n    const inputValue = balancePaymentInput.value.trim(); // Trim to remove leading/trailing spaces\n\n    if (inputValue === '-' || !isNaN(inputValue) && parseFloat(inputValue) >= 0) {\n      balanceCheckbox.checked = true;\n      completedCheckbox.checked = false;\n      completedCheckbox.removeAttribute('required');\n      checkboxStatus = 'Balance';\n    } else {\n      return;\n\n      // completedCheckbox.checked = true;\n      // balanceCheckbox.checked = false;\n      // checkboxStatus = 'Completed';\n      // balancePayment.style.display = 'none';\n      // balancePaymentInput.disabled = true;\n\n      balanceCheckbox.checked = false;\n      completedCheckbox.checked = false;\n      checkboxStatus = 'Invalid';\n    }\n    updateStatus();\n  });\n});\n\n// JS for Selling Products and adding to localStorage\nconst soldProductName = document.getElementById('productInput');\nconst soldProductPrice = document.getElementById('soldProductPrice');\nconst productBalancePrice = document.getElementById('productBalancePrice');\nconst soldProductRemark = document.getElementById('soldProductRemark');\nfunction handleSellProduct() {\n  let soldProductNameInput = soldProductName.value;\n  let soldProductPriceInput = Number(soldProductPrice.value);\n  let productBalancePriceInput = Number(productBalancePrice.value);\n  let soldProductRemarkInput = soldProductRemark.value;\n  let id = Math.random();\n  if (productBalancePriceInput === 0 || productBalancePriceInput === '') {\n    productBalancePriceInput = '-';\n  }\n  const soldProductFormData = {\n    soldProductNameInput,\n    soldProductPriceInput,\n    productBalancePriceInput,\n    soldProductRemarkInput,\n    checkboxStatus,\n    id\n  };\n  const storedData = JSON.parse(localStorage.getItem('soldProductFormData')) || [];\n  const allData = [soldProductFormData, ...storedData];\n  localStorage.setItem('soldProductFormData', JSON.stringify(allData));\n  return soldProductFormData;\n}\nconst sellProductForm = document.querySelector('.sell-product-form');\nif (sellProductForm) {\n  sellProductForm.addEventListener('submit', function (e) {\n    const balancePayment = document.querySelector('.balancePayment');\n    const balancePaymentInput = document.getElementById('productBalancePrice');\n    e.preventDefault();\n    handleSellProduct();\n    soldProductName.value = '';\n    priceInput.value = '';\n    soldProductPrice.value = '';\n    productBalancePrice.value = '';\n    soldProductRemark.value = '';\n    completedCheckbox.checked = false;\n    balanceCheckbox.checked = false;\n    balancePayment.style.display = 'block';\n    balancePaymentInput.disabled = false;\n  });\n}\n\n// // JS to dispaly Item to be sold\n// const sellButtons = document.querySelectorAll('.sellButton');\n// const modalProductName = document.querySelector('.SellingItemName');\n// const soldItemBoughtPrice = document.getElementById('soldItemBoughtPrice');\n\n// sellButtons.forEach((button, index) => {\n//   button.addEventListener('click', function (e) {\n//     sellProductContainer.classList.add('active');\n//     main.classList.add('blur');\n//     sidebar.classList.add('blur');\n//     main.classList.add('no-scroll');\n\n//     const tableRow = e.target.closest('.table-body-row');\n//     const selectedIndex = index;\n\n//     const selectedItem = storedGoodsData[selectedIndex];\n\n//     if (selectedItem) {\n//       const productName = selectedItem.addProductNameInput;\n//       const amountBought = formatAmountWithCommas(\n//         selectedItem.addProductBoughtPriceInput\n//       );\n\n//       modalProductName.textContent = productName;\n//       soldItemBoughtPrice.value = amountBought;\n//     }\n//   });\n// });\n\n//# sourceURL=webpack://posbok/./JS/sell.js?");

/***/ }),

/***/ "./config.js":
/*!*******************!*\
  !*** ./config.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst config = {\n  baseUrl: 'https://api.posbok.com',\n  token: localStorage.getItem('accessToken') || null,\n  userData: localStorage.getItem('userData') || null,\n  dummyShopId: 88\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (config);\n\n//# sourceURL=webpack://posbok/./config.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./JS/sell.js");
/******/ 	
/******/ })()
;